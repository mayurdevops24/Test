name: Mayur

on:
  workflow_dispatch:
    inputs:
      project:
        description: 'Project identifier'
        required: true
      verbosity:
        description: 'Logging verbosity level (info, debug, error)'
        required: false
        default: 'info'
  repository_dispatch:
    types: [trigger-instance]

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      start-time: ${{ steps.start-time.outputs.time }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Capture start time
        id: start-time
        run: echo "time=$(date +%s)" >> "$GITHUB_OUTPUT"

  action-one:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Prepare logs directory for Action One
        run: |
          mkdir -p logs/action-one

      - name: Run Action One and capture stdout/stderr
        id: action-one
        run: |
          LOG_FILE="logs/action-one/action-one-details.log"
          mkdir -p "$(dirname "$LOG_FILE")"

          {
            echo "--- Action One Log ---"
            echo "Project: ${{ github.event.inputs.project }}"
            echo "Run ID: ${{ github.run_id }}"
            echo "Action: action-one"
            echo "Status: Running"
            echo "Start Time: $(date)"

            echo "Processing Action One..."
            # Example commands with stdout and stderr captured
            (ls -l /nonexistent_directory) 2>&1 | tee -a "$LOG_FILE"
            (echo "Simulating successful command") 2>&1 | tee -a "$LOG_FILE"

            echo "End Time: $(date)"
            echo "Status: Completed"
          } | tee -a "$LOG_FILE"
        continue-on-error: false

      - name: Upload Consolidated Log File (Initial)
        uses: actions/upload-artifact@v4  # Downgraded for GHES compatibility
        with:
          name: action-one-initial-log
          path: logs/action-one/action-one-details.log

  finalize:
    runs-on: ubuntu-latest
    needs: [setup, action-one]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download Initial Log Artifact
        uses: actions/download-artifact@v4  # Downgraded for GHES compatibility
        with:
          name: action-one-initial-log

      - name: Ensure log file exists before appending
        run: |
          LOG_FILE="logs/action-one/action-one-details.log"
          mkdir -p "$(dirname "$LOG_FILE")"
          touch "$LOG_FILE"

      - name: Append timing and metadata to log file
        run: |
          LOG_FILE="logs/action-one/action-one-details.log"
          end_time=$(date +%s)
          start_time="${{ needs.setup.outputs.start-time }}"
          duration=$((end_time - start_time))

          {
            echo "--- Workflow Timing ---"
            echo "Workflow Start Time: $(date -d @$start_time)"
            echo "Workflow End Time: $(date -d @$end_time)"
            echo "Total Duration: ${duration}s"
            echo "--- Metadata ---"
            echo "Project: ${{ github.event.inputs.project }}"
            echo "Run ID: ${{ github.run_id }}"
            echo "Status: ${{ job.status }}"
            echo "Triggered by: ${{ github.triggering_actor }}"
            echo "Verbosity Level: ${{ github.event.inputs.verbosity }}"
          } | tee -a "$LOG_FILE"

      - name: Upload Final Consolidated Log
        uses: actions/upload-artifact@v4  # Downgraded for GHES compatibility
        with:
          name: action-one-final-log
          path: logs/action-one/action-one-details.log

      - name: Live Logging with Verbosity
        if: ${{ github.event.inputs.verbosity == 'debug' }}
        run: |
          LOG_FILE="logs/action-one/action-one-details.log"
          echo "--- Live Log Preview ---"
          cat "$LOG_FILE"

  status-check:
    runs-on: ubuntu-latest
    if: github.event_name == 'repository_dispatch'
    steps:
      - name: Download Final Consolidated Log
        uses: actions/download-artifact@v4  # Downgraded for GHES compatibility
        with:
          name: action-one-final-log

      - name: Display Instance Status
        run: |
          LOG_FILE="logs/action-one/action-one-details.log"
          if [ -f "$LOG_FILE" ]; then
            echo "--- Retrieved Log Content ---"
            cat "$LOG_FILE"
          else
            echo "No log found for the provided Run ID."
          fi
