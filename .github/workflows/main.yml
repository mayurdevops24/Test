name: Mayur

on:
  workflow_dispatch:
    inputs:
      project:
        description: 'Project identifier'
        required: true
      verbosity:
        description: 'Logging verbosity level (info, debug, error)'
        required: false
        default: 'info'
  repository_dispatch:
    types: [trigger-instance]

env:
  LOG_DIR: logs/all-details

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      start-time: ${{ steps.start-time.outputs.time }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create unified logs directory
        run: mkdir -p "${{ env.LOG_DIR }}"

      - name: Capture start time
        id: start-time
        run: echo "time=$(date +%s)" >> "$GITHUB_OUTPUT"

  action-one:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Action One
        id: action-one
        run: |
          mkdir -p "${{ env.LOG_DIR }}"
          {
            echo "Action One started at $(date)"
            echo "Processing Action One..."
            echo "Action One completed at $(date)"
          } | tee "${{ env.LOG_DIR }}/action-one.log"
        continue-on-error: false

  finalize:
    runs-on: ubuntu-latest
    needs: [setup, action-one]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download Artifacts from Previous Jobs
        uses: actions/download-artifact@v4

      - name: Ensure unified logs directory exists
        run: mkdir -p "${{ env.LOG_DIR }}"

      - name: Capture end time and duration
        id: end-time
        run: |
          end_time=$(date +%s)
          start_time="${{ needs.setup.outputs.start-time }}"
          duration=$((end_time - start_time))
          {
            echo "Workflow started at: $(date -d @$start_time)"
            echo "Workflow ended at: $(date -d @$end_time)"
            echo "Total duration: ${duration}s"
          } >> "${{ env.LOG_DIR }}/timing.log"

      - name: Create metadata file
        run: |
          {
            echo "Project: ${{ github.event.inputs.project }}"
            echo "Run ID: ${{ github.run_id }}"
            echo "Status: ${{ job.status }}"
          } > "${{ env.LOG_DIR }}/metadata.json"

      - name: Upload All Logs and Metadata as Single Artifact
        uses: actions/upload-artifact@v4
        with:
          name: all-workflow-details
          path: "${{ env.LOG_DIR }}"

      - name: Live Logging with Verbosity
        run: |
          if [ "${{ github.event.inputs.verbosity }}" = "debug" ]; then
            echo "--- Action One Log ---"
            cat "${{ env.LOG_DIR }}/action-one.log" || echo "No action-one log found."
            echo "--- Timing Log ---"
            cat "${{ env.LOG_DIR }}/timing.log" || echo "No timing log found."
            echo "--- Metadata ---"
            cat "${{ env.LOG_DIR }}/metadata.json" || echo "No metadata found."
          fi

  status-check:
    runs-on: ubuntu-latest
    if: github.event_name == 'repository_dispatch'
    steps:
      - name: Download All Workflow Details
        uses: actions/download-artifact@v4
        with:
          name: all-workflow-details

      - name: Check Instance Status
        run: |
          if [ -f "${{ env.LOG_DIR }}/metadata.json" ]; then
            echo "Fetched Metadata:"
            cat "${{ env.LOG_DIR }}/metadata.json"
          else
            echo "No metadata found for the provided Run ID."
          fi
